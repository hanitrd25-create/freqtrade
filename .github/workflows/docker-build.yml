name: Docker Build and Deploy

on:
  workflow_call:
    secrets:
      DOCKER_PASSWORD:
        required: true
      DOCKER_USERNAME:
        required: true
      DISCORD_WEBHOOK:
        required: false
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch name to build Docker images for'
        required: false
        default: 'develop'
        type: string

permissions:
  contents: read

env:
  IMAGE_NAME: "freqtradeorg/freqtrade"
  CACHE_IMAGE: "freqtradeorg/freqtrade_cache"
  GHCR_IMAGE_NAME: "ghcr.io/freqtrade/freqtrade"
  PI_PLATFORM: "linux/arm/v7"

jobs:
  deploy-docker:
    name: "Deploy Docker x64 and armv7l"
    runs-on: ubuntu-22.04
    if: github.repository == 'freqtrade/freqtrade'

    steps:
    - uses: actions/checkout@v5
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Set docker tag names
      uses: ./.github/actions/docker-tags

    - name: Save commit SHA to file
      # Add commit to docker container
      run: |
        echo "${GITHUB_SHA}" > freqtrade_commit

    - name: Login to Docker Hub
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 #v3.11.1

    - name: Available platforms
      run: echo ${PLATFORMS}
      env:
        PLATFORMS: ${{ steps.buildx.outputs.platforms }}

    - name: Build image without cache
      if: github.event_name == 'schedule'
      run: |
        docker build -t freqtrade:${TAG} .

    - name: Build ARMHF image without cache
      if: github.event_name == 'schedule'
      run: |
        docker buildx build \
          --cache-to=type=registry,ref=${CACHE_TAG_PI} \
          -f docker/Dockerfile.armhf \
          --platform ${PI_PLATFORM} \
          -t ${IMAGE_NAME}:${TAG_PI} \
          --push \
          --provenance=false \
          .

    - name: Build image with cache
      if: github.event_name != 'schedule'
      run: |
        docker pull ${IMAGE_NAME}:${TAG} || true
        docker build --cache-from ${IMAGE_NAME}:${TAG} -t freqtrade:${TAG} .

    - name: Build ARMHF image with cache
      if: github.event_name != 'schedule'
      # disable provenance due to https://github.com/docker/buildx/issues/1509
      run: |
        docker buildx build \
          --cache-from=type=registry,ref=${CACHE_TAG_PI} \
          --cache-to=type=registry,ref=${CACHE_TAG_PI} \
          -f docker/Dockerfile.armhf \
          --platform ${PI_PLATFORM} \
          -t ${IMAGE_NAME}:${TAG_PI} \
          --push \
          --provenance=false \
          .

    - name: Run build for AI images
      run: |
        docker build --build-arg sourceimage=freqtrade --build-arg sourcetag=${TAG} -t freqtrade:${TAG_PLOT} -f docker/Dockerfile.plot .
        docker build --build-arg sourceimage=freqtrade --build-arg sourcetag=${TAG} -t freqtrade:${TAG_FREQAI} -f docker/Dockerfile.freqai .
        docker build --build-arg sourceimage=freqtrade --build-arg sourcetag=${TAG_FREQAI} -t freqtrade:${TAG_FREQAI_RL} -f docker/Dockerfile.freqai_rl .

    - name: Tag images for caching
      run: |
        docker tag freqtrade:$TAG ${CACHE_IMAGE}:$TAG
        docker tag freqtrade:$TAG_PLOT ${CACHE_IMAGE}:$TAG_PLOT
        docker tag freqtrade:$TAG_FREQAI ${CACHE_IMAGE}:$TAG_FREQAI
        docker tag freqtrade:$TAG_FREQAI_RL ${CACHE_IMAGE}:$TAG_FREQAI_RL

    - name: Run backtest in Docker
      run: |
        docker run --rm -v $(pwd)/tests/testdata/config.tests.json:/freqtrade/config.json:ro -v $(pwd)/tests:/tests freqtrade:${TAG} backtesting --datadir /tests/testdata --strategy-path /tests/strategy/strats/ --strategy StrategyTestV3

    - name: push cache images
      run: |
        docker push ${CACHE_IMAGE}:$TAG
        docker push ${CACHE_IMAGE}:$TAG_PLOT
        docker push ${CACHE_IMAGE}:$TAG_FREQAI
        docker push ${CACHE_IMAGE}:$TAG_FREQAI_RL

    - name: list Images
      run: |
        docker images

  deploy-arm:
    name: "Deploy Docker ARM64"
    permissions:
      packages: write
    needs: [ deploy-docker ]
    # Only run on 64bit machines
    runs-on: [self-hosted, linux, ARM64]
    if: github.repository == 'freqtrade/freqtrade'

    steps:
    - uses: actions/checkout@v5
      with:
        persist-credentials: false

    - name: Extract branch name
      env:
        BRANCH_NAME_INPUT: ${{ github.event.inputs.branch_name }}
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          BRANCH_NAME="${BRANCH_NAME_INPUT}"
        else
          BRANCH_NAME="${GITHUB_REF##*/}"
        fi
        echo "GITHUB_REF='${GITHUB_REF}'"
        echo "BRANCH_NAME='${BRANCH_NAME}'"
        echo "BRANCH_NAME=${BRANCH_NAME}" >> "$GITHUB_ENV"

    - name: Save commit SHA to file
      # Add commit to docker container
      run: |
        echo "${GITHUB_SHA}" > freqtrade_commit

    - name: Login to Docker Hub
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and test and push docker images
      env:
        GHCR_USERNAME: ${{ github.actor }}
        GHCR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        build_helpers/publish_docker_arm64.sh

    - name: Discord notification
      uses: rjstone/discord-webhook-notify@c2597273488aeda841dd1e891321952b51f7996f #v2.2.1
      if: always() && ( github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork == false) && (github.event_name != 'schedule')
      with:
          severity: info
          details: Deploy Succeeded!
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
